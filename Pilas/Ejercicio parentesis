#implementación usando listas de python
from inspect import stack


class Stack:
  def __init__(self):
    self.stack = []

  def push(self, e):
    #agregar un elemento e a la pila
    self.stack.append(e)

  def pop(self):
    #remueve y retorna el último elemento
    if(self.is_empty()):
      raise Exception("Pila vacía...")
    return self.stack.pop()

  def top(self):
    #retornar el último el último elemento de la pila
    if(self.is_empty()):
      raise Exception("Pila vacía...")
    return self.stack[-1]

  def is_empty(self):
    return len(self.stack)==0

  def __len__(self): #dunder method
    #retorna tamaño
    return len(self.stack)

cadena = "(()("
s = Stack()


def is_balanced(cadena):
    for i in cadena:
        if(i=="("):
            s.push(i)
        else:
            try:
                s.pop()
            except:
                return False
    if len(s) == 0:
        return True
    else:
        return False


is_balanced(cadena)
